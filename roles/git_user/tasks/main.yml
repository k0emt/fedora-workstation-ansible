---
# install git

- name: Debug - top of file
  ansible.builtin.debug:
    msg: Installing git tools

- name: Install Git
  become: true
  ansible.builtin.dnf:
    name:
      - git
      - gitk
      - git-gui
    state: present

- name: Debug - Before configuring git
  ansible.builtin.debug:
    msg: Starting git configuration tasks

# tasks for configuring git

- name: Configure Git settings
  become: false
  block:
    # - name: Configure Git user name
    #   command: git config --global user.name "{{ git_user_name }}"

    # - name: Configure Git user email
    #   command: git config --global user.email "{{ git_user_email }}"

    - name: Set default Git branch to main
      ansible.builtin.command: git config --global init.defaultBranch main
    - name: Set default merge strategy to rebase
      ansible.builtin.command: git config --global pull.rebase true
    - name: Debug - Before copying global git ignore
      ansible.builtin.debug:
        msg: Copying global git ignore file

    - name: Copy global git ignore file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/global-git-ignore.txt"
        dest: /home/{{ ansible_user }}/.gitignore_global

    # set the global git ignore file
    - name: Set global git ignore file
      ansible.builtin.command: git config --global core.excludesfile "/home/{{ ansible_user }}/.gitignore_global"
    - name: Create git projects directory
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/Projects
        state: directory

- name: Configure SSH environment
  become: false
  block:
    # set up a directory for ssh keys
    - name: Create .ssh directory
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.ssh
        state: directory
        mode: "0700" # recommended for .ssh directory

    # Debug before creating new ssh keys
    - name: Debug - Before creating new ssh keys
      ansible.builtin.debug:
        msg: Creating new ssh keys

    # Loop through the SSH key names and create keys
    - name: Create new ssh keys
      ansible.builtin.shell:
        cmd: ssh-keygen -t ed25519 -C "{{ git_user_email }}" -f "/home/{{ ansible_user }}/.ssh/id_ed25519_{{ item.name }}" -N "" -q
      args:
        creates: /home/{{ ansible_user }}/.ssh/id_ed25519_{{ item.name }}
      loop: "{{ ssh_keys }}"

    - name: Debug - After creating new ssh keys
      ansible.builtin.debug:
        msg: Finished creating new ssh keys
