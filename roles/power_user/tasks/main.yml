---
# task to install zsh
- name: Install zsh
  become: true
  ansible.builtin.dnf:
    name: zsh
    state: present

# task to change user shell to zsh
- name: Change user shell to zsh 
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh

# Add this debug task before the existing tasks to verify variables
- name: Debug user variables
  ansible.builtin.debug:
    msg: 
      - "ansible_user: {{ ansible_user }}"

- name: Configure ZSH and plugins
  become: false
  block:
    - name: Ensure .zshrc file exists
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.zshrc"
        state: touch
        mode: '0644'

    - name: Install Oh My Zsh
      ansible.builtin.shell:
        cmd: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
        creates: "/home/{{ ansible_user }}/.oh-my-zsh"

    - name: Install zsh-autosuggestions plugin # noqa: latest
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        depth: 1

    - name: Install zsh-completions plugin # noqa: latest
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-completions.git
        dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-completions"
        depth: 1

    - name: Install zsh-syntax-highlighting plugin # noqa: latest
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
        depth: 1

    - name: Install Powerlevel10k theme
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "/home/{{ ansible_user }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1

    - name: Set Powerlevel10k theme in .zshrc
      lineinfile:
        path: "/home/{{ ansible_user }}/.zshrc"
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
      notify: Reload zsh

    - name: Use oh-my-zsh plugins
      lineinfile:
        path: "/home/{{ ansible_user }}/.zshrc"
        regexp: '^plugins='
        line: 'plugins=(git aws web-search encode64 zsh-autosuggestions zsh-syntax-highlighting)'
      notify: Reload zsh

- name: Install power user packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop: "{{ power_user_packages }}"
  tags:
    - packages
    - power_user

  # copy file static-content/vimrc to users ~/.vimrc
- name: Copy .vimrc to user's home directory
  become: false
  copy:
    src: "{{ playbook_dir }}/static-content/vimrc"
    dest: "/home/{{ ansible_user }}/.vimrc"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
    backup: true
    force: false

- name: Install IOSevka fonts and dependencies
  tags:
    - fonts
    - iosevka
  become: true
  block:
    - name: Enhance dnf so we can use copr
      ansible.builtin.dnf:
        name: dnf-plugins-core
        state: present

    - name: Enable copr repository for IOSevka font
      ansible.builtin.command:
        cmd: dnf copr enable -y peterwu/iosevka
      register: copr_result
      changed_when: "'Already enabled' not in copr_result.stdout"
      failed_when: false

    - name: Install IOSevka fonts
      ansible.builtin.dnf:
        name: 
          - iosevka-fixed-ss04-fonts
          - iosevka-term-ss04-fonts
        state: present
      register: font_install
      ignore_errors: true

  rescue:
    - name: Handle font installation failure
      debug:
        msg: "Failed to install IOSevka fonts. Continuing with playbook execution."
    - name: Set fact for font installation status
      set_fact:
        iosevka_installed: false

  always:
    - name: Clean dnf cache
      become: true
      command: dnf clean expire-cache
      changed_when: false
